{"version":3,"sources":["resources/img/enemy/placeholder.png","components sync","components/Screen.js","components/Menu.js","components/EnemyStats.js","components/EnemyImage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Screen","props","name","isMainScreen","main","isVisible","toggleVisibility","state","undefined","this","className","replace","children","React","Component","Menu","menuItems","items","item","push","onClick","EnemyStats","enemyHP","value","max","enemyName","addEnemyHP","amount","setState","prevState","Object","assign","getEnemyHP","setEnemyName","enemyHPwidth","style","width","EnemyImage","image","require","changeImage","path","src","alt","App","enemyStats","createRef","enemyImage","dpc","current","ref","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f35e0ac7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.9d36674e.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 21;","import React from 'react';\r\nimport './Screen.css';\r\n\r\nclass Screen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.name = this.props.name;\r\n        this.isMainScreen = this.props.main;\r\n        this.isVisible = false;\r\n        if (this.isMainScreen) {\r\n            this.toggleVisibility(true);\r\n        }\r\n    }\r\n    \r\n    toggleVisibility(state) {\r\n        if (state !== undefined) {\r\n            if (state) {\r\n                this.isVisible = true;\r\n            } else {\r\n                this.isVisible = false;\r\n            }\r\n        } else {\r\n            if (this.isVisible) {\r\n                this.isVisible = false;\r\n            } else {\r\n                this.isVisible = true;\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let className = \"Screen\";\r\n        if (this.isVisible) {\r\n            className = className.replace(\" hidden\", \"\");\r\n        } else {\r\n            className += \" hidden\";\r\n        }\r\n        return(\r\n            <div className={className}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Screen;","import React from 'react';\r\nimport \"./Menu.css\";\r\n\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.menuItems = props.menuItems\r\n    }\r\n    render() {\r\n        let items = []\r\n        for (var item in this.menuItems) {\r\n            items.push(<button onClick={this.menuItems[item].onClick}>{this.menuItems[item].name}</button>)\r\n        }\r\n        return (\r\n            <div className=\"Menu\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './EnemyStats.css';\r\n\r\nclass EnemyStats extends React.Component {\r\n    state = {\r\n        enemyHP: {\r\n            value: 20,\r\n            max: 20\r\n        },\r\n        enemyName: 'Name'\r\n    }\r\n\r\n    addEnemyHP = (amount) => {\r\n        this.setState(prevState => {\r\n            let enemyHP = Object.assign({}, prevState.enemyHP);\r\n            enemyHP.value += amount;\r\n            if (enemyHP.value === 0) {\r\n                enemyHP.value = enemyHP.max;\r\n            }\r\n            return {enemyHP};\r\n        });\r\n    }\r\n\r\n    getEnemyHP = () => {\r\n        return this.state.enemyHP;\r\n    }\r\n\r\n    setEnemyName = (name) => {\r\n        this.setState({\r\n            enemyName: name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var enemyHPwidth = 0;\r\n        enemyHPwidth = ((this.state.enemyHP.value / this.state.enemyHP.max) * 100) + '%';\r\n\r\n        return(\r\n            <div className=\"EnemyStats\">\r\n                <p>{this.state.enemyName}</p>\r\n                <div className=\"EnemyHP\">\r\n                    <div style={{width: enemyHPwidth}} />\r\n                    <p>{this.state.enemyHP.value} / {this.state.enemyHP.max}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnemyStats;","import React from 'react';\r\nimport './EnemyImage.css';\r\n\r\nclass EnemyImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = props.onClick;\r\n    }\r\n\r\n    state = {\r\n        image: require('../resources/img/enemy/placeholder.png')\r\n    }\r\n\r\n    changeImage = (path) => {\r\n        this.setState({\r\n            image: require(path)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <img className=\"EnemyImage\" src={this.state.image} alt={this.state.image} onClick={this.onClick} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnemyImage;","import React from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport Screen from './components/Screen';\nimport Menu from './components/Menu';\nimport EnemyStats from './components/EnemyStats';\nimport EnemyImage from './components/EnemyImage';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.enemyStats = React.createRef();\n        this.enemyImage = React.createRef();\n        this.dpc = 1\n    }\n\n    render() {\n        return (\n            <div>\n                <Menu menuItems={[{\n                    name: 'Hit',\n                    onClick: () => {\n                        this.enemyStats.current.addEnemyHP(-this.dpc);\n                    }\n                },\n                {\n                    name: 'Nam',\n                    onClick: () => {\n                        this.enemyStats.current.setEnemyName(\"Igar\");\n                    }\n\n                },\n                {\n                    name: '-D',\n                    onClick: () => {\n                        this.dpc -= 1;\n                    }\n                },\n                {\n                    name: '+D',\n                    onClick: () => {\n                        this.dpc += 1;\n                    }\n                }]} />\n                <Screen main>\n                    <EnemyStats ref={this.enemyStats} />\n                    <EnemyImage ref={this.enemyImage} onClick={() => {\n                        this.enemyStats.current.addEnemyHP(-1);\n                    }} />\n                </Screen>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}